"
Represents a primitive object. A primitive consist of:

- An identifier, currently a `Number` accessed through `primitiveNumber`.
- A generated selector, i.e. the selector of the JITed version of the primitive.
- Its CFG generated by Druid.
"
Class {
	#name : #DRJITPrimitiveObject,
	#superclass : #DRInterpreterPrimitiveObject,
	#instVars : [
		'argumentCount',
		'mayCallback',
		'supported'
	],
	#category : #'Druid-CompilerBuilder'
}

{ #category : #accessing }
DRJITPrimitiveObject >> argumentCount [

	^ argumentCount
]

{ #category : #accessing }
DRJITPrimitiveObject >> argumentCount: anObject [

	argumentCount := anObject
]

{ #category : #compiling }
DRJITPrimitiveObject >> compileUsing: aCompiler [
	
	self supported ifFalse: [ ^ self ].
	
	DRPrimitiveCompilerCompiler new
		primitiveName: self sourceSelector;
		interpreter: aCompiler newInterpreter;
		primitiveCompilerName: self genSelector;
		compilerClass: aCompiler targetClass;
		compile
]

{ #category : #accessing }
DRJITPrimitiveObject >> genSelector [
	" Answer a <Symbol> specifying the JITed selector of the interpreter's counterpart (interpreter) method"

	supported ifFalse: [ ^ #genNonImplementedPrimitive ].

	^ super genSelector
]

{ #category : #initialization }
DRJITPrimitiveObject >> initialize [

	super initialize.
	supported := true.
	mayCallback := false
]

{ #category : #accessing }
DRJITPrimitiveObject >> mayCallback [

	^ mayCallback
]

{ #category : #accessing }
DRJITPrimitiveObject >> mayCallback: aBoolean [

	mayCallback := aBoolean
]

{ #category : #accessing }
DRJITPrimitiveObject >> supported [

	^ supported
]

{ #category : #accessing }
DRJITPrimitiveObject >> supported: aBoolean [

	supported := aBoolean
]
