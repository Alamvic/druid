name: Complete Test

on:
  # Run on push and pull requests on any branch, but ignore if change doesn't affect code.
  push:
    paths-ignore:
    - 'README.md'
    - 'docs/**'
  pull_request:
    paths-ignore:
    - 'README.md'
    - 'docs/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    strategy:
      # Default value means that a failure in one OS cancels all 
      fail-fast: false
      matrix:
        smalltalk: [ Pharo64-11 ]
        os: [ ubuntu-latest, macos-latest ]
        ston: [ .smalltalk.ston ]
        # Test Windows with some exclusions. 
        # At least a part of the problem is reported here: 
        # https://github.com/pharo-vcs/iceberg/issues/1394
        include:
          - smalltalk: Pharo64-11
            os: windows-latest
            ston: .smalltalk.windows.ston
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.smalltalk }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup smalltalkCI
        uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: ${{ matrix.smalltalk }}
      - name: Install LLVM
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "10.0"
      - name: Checkout Unicorn
        uses: actions/checkout@v3
        with:
          repository: 'pharo-project/unicorn'
          path: 'unicorn'
          ref: 'pharo-vm-unicorn2'
      - name: Get Unicorn Commit ID
        id: unicorn_commit
        run: |
          echo "Unicorn SHA: $(cd unicorn && git rev-parse HEAD)"
          echo "commit_sha=$(cd unicorn && git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Cache Unicorn build
        uses: actions/cache@v3
        id: cache-unicorn
        with:
          path: ~/unicorn_result/lib/
          key: ${{ runner.os }}-unicorn_lib-${{ steps.unicorn_commit.commit_sha }}
      - name: Install Unicorn
        if: ${{ steps.cache-unicorn.outputs.cache-hit != 'true' }}
        run: |
          cmake -S unicorn -B unicorn_build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=unicorn_result
          cmake --build unicorn_build --target install
          mkdir -p ${SMALLTALK_CI_BUILD}
          cp unicorn_result/lib/libunicorn.* ${SMALLTALK_CI_BUILD}
      - name: Load Image and Run Tests
        run: smalltalkci -s ${{ matrix.smalltalk }} ${{ matrix.ston }}
        shell: bash
        timeout-minutes: 30
